{"version":3,"sources":["index.js","pages/Index.jsx","_actions/index.js","pages/Counter.jsx","components/User.jsx","pages/Users.jsx","components/Todo.jsx","pages/Todos.jsx","pages/User.jsx","App.jsx","_reducers/index.js","_reducers/app.js"],"names":["Index","setCounter","msg","type","payload","Counter","useState","alert","setAlert","dispatch","useDispatch","counter","useSelector","state","onClick","value","onChange","e","target","test","parseInt","User","name","email","company","username","className","catchPhrase","to","Users","users","useEffect","howMany","active","length","getState","a","moreVariables","axios","get","then","data","more","catch","error","isLoading","map","key","Todo","todos","setTodoText","el","done","todo","id","Todos","todoText","DefaultUser","newUrl","setUserName","DetailsUser","u","rowSpan","phone","website","address","street","suite","city","zipcode","geo","lat","lng","bs","useParams","userName","user","find","t","App","basename","nanoid","path","component","exact","allReducer","combineReducers","action","concat","filter","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35a5603b.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\n\n// Redux\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport allReducer from \"./_reducers\";\nimport * as actions from \"./_actions\";\n\n// Redux devtools only in development\nif (process.env.NODE_ENV === \"development\") {\n  const composeEnhancers = composeWithDevTools({\n    actions,\n    trace: true,\n    traceLimit: 25,\n  });\n  var store = createStore(allReducer, composeEnhancers(applyMiddleware(thunk)));\n} else {\n  store = createStore(allReducer, applyMiddleware(thunk));\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n// reportWebVitals();\n// reportWebVitals(console.log);\n","import React from \"react\";\n\nconst Index = () => {\n  return <div>Template/Example with React, Redux, Thunk, Router-DOM</div>;\n};\n\nexport default Index;\n","import axios from \"axios\";\n\nexport const setCounter = (msg) => {\n  return {\n    type: \"SET_COUNTER\",\n    payload: msg,\n  };\n};\n//\nexport const increment = (msg) => {\n  return {\n    type: \"INCREMENT\",\n    payload: msg,\n  };\n};\n//\nexport const decrement = (msg) => {\n  return {\n    type: \"DECREMENT\",\n    payload: msg,\n  };\n};\n\n//\n\nexport const fetchUsers = (howMany) => async (dispatch, getState) => {\n  dispatch({ type: \"FETCH_USERS_REQUEST\" });\n  const moreVariables = \"123\" + howMany;\n\n  axios\n    .get(\"https://jsonplaceholder.typicode.com/users\")\n    .then(function (users) {\n      dispatch({\n        type: \"FETCH_USERS_SUCCESS\",\n        payload: users.data,\n        more: moreVariables, // <-- you can dispatch more variables to reducer, cool!\n      });\n    })\n    .catch(function (error) {\n      dispatch({ type: \"FETCH_USERS_FAILURE\", error });\n    });\n};\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setCounter } from \"./../_actions\";\n\nconst Counter = () => {\n  const [alert, setAlert] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const counter = useSelector((state) => state.counter);\n\n  return (\n    <div>\n      <h2>{counter}</h2>\n      <button\n        onClick={() => {\n          dispatch(setCounter(counter + 1));\n        }}\n      >\n        +\n      </button>\n      <button\n        onClick={() => {\n          dispatch(setCounter(counter - 1));\n        }}\n      >\n        -\n      </button>\n\n      <p>Live update stage in input</p>\n      <input\n        type=\"text\"\n        value={counter}\n        onChange={(e) => {\n          let value = e.target.value;\n          if (/^\\d+$/.test(value)) {\n            dispatch(setCounter(parseInt(value)));\n            setAlert(\"\");\n          } else {\n            setAlert(\"Only numbers allowed\");\n          }\n        }}\n      />\n      <p>{alert}</p>\n    </div>\n  );\n};\n\nexport default Counter;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst User = ({ name, email, company, username }) => {\n  return (\n    <div className=\"user-container\">\n      <h3>{name}</h3>\n      <p>{email}</p>\n      <p>{company.name}</p>\n      <p>{company.catchPhrase}</p>\n      <Link to={\"/user/\" + username}>Go to details page</Link>\n    </div>\n  );\n};\n\nexport default User;\n","import React, { useEffect } from \"react\";\nimport User from \"./../components/User\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchUsers } from \"./../_actions\";\n\nconst Users = () => {\n  const dispatch = useDispatch();\n  const users = useSelector((state) => state.users);\n\n  useEffect(() => {\n    if (users.active.length === 0) {\n      dispatch(fetchUsers(321)); // <-- (321) example that you can send your data to actions\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  /*\n  Basic about useEffect:\n\n  // useEffect, always runs when a component gets mounted\n  useEffect(() => {\n    // Code to be executed\n    return () => {\n    // Code that will execute when the component gets unmounted\n    };\n  }, [input]); // When the variable is changed, the useEffect will also be executed.\n*/\n\n  return (\n    <div>\n      {users.isLoading ? (\n        <p>Loading...</p>\n      ) : (\n        <div>\n          {\n            // eslint-disable-next-line array-callback-return\n            users.active.map((e, key) => (\n              <User\n                key={key}\n                name={e.name}\n                email={e.email}\n                company={e.company}\n                username={e.username}\n              />\n            ))\n          }\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Users;\n","import React from \"react\";\n\nconst Todo = ({ todos, setTodoText, dispatch }) => {\n  return (\n    <div>\n      {todos.map((el, key) => (\n        <div className={\"todo-container \" + (el.done && \"todo-done\")} key={key}>\n          <p>{el.todo}</p>\n\n          <button\n            onClick={() => {\n              dispatch({ type: \"DELETE_TODO\", payload: el.id });\n              setTodoText(\"\");\n            }}\n          >\n            Delete\n          </button>\n          <button\n            onClick={() => {\n              dispatch({\n                type: \"STATUS_TODO\",\n                payload: el.id,\n              });\n            }}\n          >\n            {el.done ? \"Undone\" : \"Done\"}\n          </button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Todo;\n","import React, { useState } from \"react\";\nimport Todo from \"./../components/Todo\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst Todos = () => {\n  const [todoText, setTodoText] = useState(\"\");\n  const [alert, setAlert] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const todos = useSelector((state) => state.todos);\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        onChange={(e) => {\n          setTodoText(e.target.value);\n        }}\n        value={todoText}\n      />\n\n      <button\n        onClick={() => {\n          if (todoText.length > 0) {\n            dispatch({ type: \"ADD_TODO\", payload: todoText });\n            setTodoText(\"\");\n            setAlert(\"\");\n          } else {\n            setAlert(\"Please enter your Todo!\");\n          }\n        }}\n      >\n        Add\n      </button>\n\n      <p>{todoText.length === 0 && alert}</p>\n      {todos.length > 0 ? <h3>My todos: </h3> : <p>No todos, add something</p>}\n\n      <Todo todos={todos} setTodoText={setTodoText} dispatch={dispatch} />\n    </div>\n  );\n};\n\nexport default Todos;\n","import React, { useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst User = () => {\n  const { name } = useParams(); // <-- read value from url, see App.jsx Line 91\n  const [userName, setUserName] = useState(\"\");\n  const users = useSelector((state) => state.users);\n\n  const newUrl = `/user/${userName.length > 0 ? userName : name}`;\n\n  const user = users.active.find((t) => {\n    return t.username === name;\n  });\n\n  return (\n    <div>\n      {user && user.id > 0 ? (\n        <DetailsUser u={user} />\n      ) : (\n        <DefaultUser name={name} newUrl={newUrl} setUserName={setUserName} />\n      )}\n    </div>\n  );\n};\n\nconst DefaultUser = ({ name, newUrl, setUserName }) => {\n  return (\n    <>\n      <h3>Hello {name}!</h3>\n      <input\n        type=\"text\"\n        onChange={(e) => {\n          setUserName(e.target.value);\n        }}\n      />\n      <p>\n        Go to user profile: <Link to={newUrl}>{newUrl}</Link>\n      </p>\n    </>\n  );\n};\n\nconst DetailsUser = (u) => {\n  u = u.u;\n  return (\n    <div>\n      <table>\n        <tbody>\n          <tr>\n            <th rowSpan=\"2\">Name:</th>\n            <td>{u.name}</td>\n          </tr>\n          <tr>\n            <td>@{u.username}</td>\n          </tr>\n          <tr>\n            <th>E-Mail:</th>\n            <td>{u.email}</td>\n          </tr>\n          <tr>\n            <th>Phone:</th>\n            <td>{u.phone}</td>\n          </tr>\n          <tr>\n            <th>Website:</th>\n            <td>{u.website}</td>\n          </tr>\n        </tbody>\n      </table>\n\n      <h4>Private Address</h4>\n      <table>\n        <tbody>\n          <tr>\n            <th>Street:</th>\n            <td>{u.address.street}</td>\n          </tr>\n          <tr>\n            <th>Suite:</th>\n            <td>{u.address.suite}</td>\n          </tr>\n          <tr>\n            <th>City:</th>\n            <td>{u.address.city}</td>\n          </tr>\n          <tr>\n            <th>Zipcode:</th>\n            <td>{u.address.zipcode}</td>\n          </tr>\n          <tr>\n            <th>GEO:</th>\n            <td>\n              lat: {u.address.geo.lat} / lng: {u.address.geo.lng}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      <h4>Company</h4>\n      <table>\n        <tbody>\n          <tr>\n            <th>Name:</th>\n            <td>{u.company.name}</td>\n          </tr>\n          <tr>\n            <th>Phrase:</th>\n            <td>{u.company.catchPhrase}</td>\n          </tr>\n          <tr>\n            <th>BS:</th>\n            <td>{u.company.bs}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default User;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  Link,\n} from \"react-router-dom\";\nimport { nanoid } from \"nanoid\";\n\n// Pages\nimport Index from \"./pages/Index\";\nimport Counter from \"./pages/Counter\";\nimport Users from \"./pages/Users\";\nimport Todos from \"./pages/Todos\";\nimport User from \"./pages/User\";\n\n// Style\nimport \"./App.css\";\n\n// Redux\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { increment, decrement } from \"./_actions\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const counter = useSelector((state) => state.counter);\n\n  return (\n    <div className=\"App\">\n      <Router basename=\"/\">\n        <header>\n          <ul>\n            <li>\n              <Link to=\"/\">Index</Link>\n            </li>\n            <li>\n              <Link to=\"/counter\">Counter</Link>\n            </li>\n            <li>\n              <Link to=\"/users\">Users (Entry when counter &gt;15)</Link>\n            </li>\n            <li>\n              <Link to=\"/todos\">Todos</Link>\n            </li>\n            <li>\n              <Link to=\"/user/Example\">User</Link>\n            </li>\n          </ul>\n        </header>\n        <hr />\n\n        <ul>\n          <li>\n            <button\n              onClick={() => {\n                dispatch(increment(10));\n              }}\n            >\n              +10\n            </button>\n          </li>\n          <li>\n            <button\n              onClick={() => {\n                dispatch(decrement(10));\n              }}\n            >\n              -10\n            </button>\n          </li>\n          <li>\n            Random ID: <em>{nanoid()}</em>\n          </li>\n          <li>\n            Counter stage: <strong>{counter}</strong>\n          </li>\n        </ul>\n\n        <hr />\n        <div className=\"page\">\n          <Switch>\n            <Route path=\"/\" component={Index} exact />\n            <Route path=\"/counter\" component={Counter} exact />\n            <Route path=\"/users\" exact>\n              {counter > 15 ? <Users /> : <Redirect to=\"/counter\" />}\n            </Route>\n            <Route path=\"/todos\" component={Todos} exact />\n            <Route path=\"/user/:name\" component={User} exact />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { counter, users, todos } from \"./app\";\n\nconst allReducer = combineReducers({\n  counter,\n  users,\n  todos,\n});\n\nexport default allReducer;\n","import { nanoid } from \"nanoid\";\n\n// state = 10, default state\nexport const counter = (state = 10, action) => {\n  switch (action.type) {\n    case \"SET_COUNTER\":\n      return action.payload;\n\n    case \"INCREMENT\":\n      // or: return state + 1\n      return state + action.payload;\n\n    case \"DECREMENT\":\n      // or: return state - 1\n      return state - action.payload;\n\n    default:\n      return state;\n  }\n};\n\n//\n\nexport const users = (\n  state = { active: [], isLoading: false, error: null },\n  action\n) => {\n  switch (action.type) {\n    case \"FETCH_USERS_REQUEST\":\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case \"FETCH_USERS_SUCCESS\":\n      return {\n        ...state,\n        isLoading: false,\n        active: action.payload,\n        howMany: action.more, // our more variable read by action.more and send to howMany, you can read from selector: state.howMany in component\n      };\n    case \"FETCH_USERS_FAILURE\":\n      return {\n        ...state,\n        isLoading: false,\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n};\n\n//\n\n// Add todoText with own ID and remove by ID\n\nexport const todos = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      return state.concat({ todo: action.payload, id: nanoid(), done: false });\n\n    case \"DELETE_TODO\":\n      return state.filter((t) => t.id !== action.payload);\n\n    case \"STATUS_TODO\":\n      let todo = state.find((t) => {\n        return t.id === action.payload;\n      });\n      todo.done = !todo.done;\n      return [...state];\n\n    default:\n      return state;\n  }\n};\n\n// Add only todoText and remove by todoText\n\n// export const todos = (state = [], action) => {\n//   switch (action.type) {\n//     case \"ADD_TODO\":\n//       return state.concat(action.payload);\n\n//     case \"DELETE_TODO\":\n//       return state.filter((todo) => todo !== action.payload);\n\n//     default:\n//       return state;\n//   }\n// };\n"],"sourceRoot":""}